import{S as zv,i as Pv,s as Hv,k as l,a as i,q as o,l as r,c as d,m as s,r as n,h as e,n as u,p as Z2,J as Bv,b as f,C as a,B as Lp}from"./index-c3577ca2.js";function Cv($2){let Y,Op,gr,Oa,Qo,as,Q,Vo,mt,Ko,xo,ts,V,bt,Jo,Xo,wa,jo,es,K,ht,v,Dt,Wo,Zo,St,$o,go,At,an,tn,Rt,en,ln,Lt,rn,sn,Ot,on,nn,wt,dn,kn,Mt,fn,pn,p,y,zt,un,En,Pt,vn,yn,Ht,_n,Tn,Bt,cn,mn,Ct,bn,hn,Nt,Dn,Sn,Ft,An,Rn,qt,Ln,On,_,Ut,wn,Mn,Yt,zn,Pn,Gt,Hn,Bn,It,Cn,Nn,Qt,Fn,qn,Vt,Un,Yn,Kt,Gn,In,xt,Qn,Vn,T,Jt,Kn,xn,Xt,Jn,Xn,jt,jn,Wn,Wt,Zn,$n,Zt,gn,ai,$t,ti,ei,gt,li,ri,ae,si,oi,c,te,ni,ii,ee,di,ki,le,fi,pi,re,ui,Ei,se,vi,yi,oe,_i,Ti,ne,ci,mi,ie,bi,hi,m,de,Di,Si,ke,Ai,Ri,fe,Li,Oi,pe,wi,Mi,ue,zi,Pi,Ee,Hi,Bi,ve,Ci,Ni,ye,Fi,qi,b,_e,Ui,Yi,Te,Gi,Ii,ce,Qi,Vi,me,Ki,xi,be,Ji,Xi,he,ji,Wi,De,Zi,$i,Se,gi,ad,h,Ae,td,ed,Re,ld,rd,Le,sd,od,Oe,nd,id,we,dd,kd,Me,fd,pd,ze,ud,Ed,Pe,vd,yd,D,He,_d,Td,Be,cd,md,Ce,bd,hd,Ne,Dd,Sd,Fe,Ad,Rd,qe,Ld,Od,Ue,wd,Md,Ye,zd,Pd,S,Ge,Hd,Bd,Ie,Cd,Nd,Qe,Fd,qd,Ve,Ud,Yd,Ke,Gd,Id,xe,Qd,Vd,Je,Kd,xd,Xe,Jd,Xd,A,je,jd,Wd,We,Zd,$d,Ze,gd,ak,$e,tk,ek,ge,lk,rk,al,sk,ok,tl,nk,ik,el,dk,kk,R,ll,fk,pk,rl,uk,Ek,sl,vk,yk,ol,_k,Tk,nl,ck,mk,il,bk,hk,dl,Dk,Sk,kl,Ak,ls,Ma,fl,Rk,rs,za,Lk,ss,da,g2='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>maaş<span class="token punctuation">)</span> <span class="token keyword">FROM</span> kisiler</code>',os,Pa,Ok,ns,x,pl,ul,El,wk,Mk,vl,yl,_l,zk,is,Ha,Pk,ds,ka,av='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>maaş<span class="token punctuation">)</span> <span class="token keyword">as</span> OrtalamaMaaş <span class="token keyword">FROM</span> kisiler</code>',ks,Ba,Hk,fs,J,Tl,cl,ml,Bk,Ck,bl,hl,Dl,Nk,ps,Ca,Fk,us,fa,tv=`<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>maaş<span class="token punctuation">)</span> <span class="token keyword">as</span> OrtalamaMaaş <span class="token keyword">FROM</span> kisiler <span class="token keyword">WHERE</span> ülke<span class="token operator">=</span><span class="token string">'Türkiye'</span></code>`,Es,Na,qk,vs,X,Sl,Al,Rl,Uk,Yk,Ll,Ol,wl,Gk,ys,Fa,Ml,Ik,_s,qa,Qk,Ts,pa,ev='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>maaş<span class="token punctuation">)</span> <span class="token keyword">as</span> Sayı <span class="token keyword">FROM</span> kisiler</code>',cs,Ua,Vk,ms,j,zl,Pl,Hl,Kk,xk,Bl,Cl,Nl,Jk,bs,Ya,Xk,hs,ua,lv='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">as</span> Sayı <span class="token keyword">FROM</span> kisiler</code>',Ds,G,jk,Fl,Wk,Zk,ql,$k,gk,Ss,Ga,Ul,af,As,W,tf,Yl,ef,lf,Rs,Ea,rv='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Sayı <span class="token keyword">FROM</span> kisiler</code>',Ls,Ia,rf,Os,Z,Gl,Il,Ql,sf,of,Vl,Kl,xl,nf,ws,Qa,df,Ms,va,sv=`<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Sayı <span class="token keyword">FROM</span> kisiler <span class="token keyword">WHERE</span> ülke<span class="token operator">=</span><span class="token string">'USA'</span></code>`,zs,Va,kf,Ps,$,Jl,Xl,jl,ff,pf,Wl,Zl,$l,uf,Hs,Ka,gl,Ef,Bs,I,vf,xa,yf,_f,ar,Tf,cf,Cs,ya,ov='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">Distinct</span> ülke<span class="token punctuation">)</span> <span class="token keyword">as</span> ÜlkeSayısı <span class="token keyword">FROM</span> kisiler</code>',Ns,Ja,mf,Fs,g,tr,er,lr,bf,hf,rr,sr,or,Df,qs,Xa,nr,Sf,Us,ja,Af,Ys,_a,nv='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">FIRST</span><span class="token punctuation">(</span>Ad<span class="token punctuation">)</span> <span class="token keyword">as</span> ilkİsim <span class="token keyword">FROM</span> kisiler</code>',Gs,Wa,Rf,Is,aa,ir,dr,kr,Lf,Of,fr,pr,ur,wf,Qs,Za,Mf,Vs,Ta,iv='<code class="language-sql"><span class="token keyword">SELECT</span> ad <span class="token keyword">as</span> ilkİsim <span class="token keyword">FROM</span> kisiler <span class="token keyword">LIMIT</span> <span class="token number">1</span></code>',Ks,ta,zf,$a,Pf,Hf,xs,ga,Er,Bf,Js,at,Cf,Xs,ca,dv='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">LAST</span><span class="token punctuation">(</span>Soyad<span class="token punctuation">)</span> <span class="token keyword">as</span> SonSoyad <span class="token keyword">FROM</span> kisiler</code>',js,ma,kv='<code class="language-sql"><span class="token keyword">SELECT</span> soyad <span class="token keyword">as</span> SonSoyad <span class="token keyword">FROM</span> kisiler <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> id <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span></code>',Ws,tt,Nf,Zs,ea,vr,yr,_r,Ff,qf,Tr,cr,mr,Uf,$s,et,br,Yf,gs,lt,Gf,ao,ba,fv='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>yas<span class="token punctuation">)</span> <span class="token keyword">as</span> EnYaşlı <span class="token keyword">FROM</span> kisiler</code>',to,rt,If,eo,la,hr,Dr,Sr,Qf,Vf,Ar,Rr,Lr,Kf,lo,st,xf,ro,ha,pv='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">MIN</span><span class="token punctuation">(</span>yas<span class="token punctuation">)</span> <span class="token keyword">as</span> EnGenç <span class="token keyword">FROM</span> kisiler</code>',so,ot,Jf,oo,ra,Or,wr,Mr,Xf,jf,zr,Pr,Hr,Wf,no,Da,Br,Zf,$f,io,Sa,uv='<code class="language-sql"><span class="token keyword">SELECT</span> ad<span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span>yas<span class="token punctuation">)</span> <span class="token keyword">as</span> EnYaşlı <span class="token keyword">FROM</span> kisiler</code>',ko,nt,gf,fo,sa,Cr,Aa,Nr,ap,tp,Fr,ep,lp,qr,Ra,Ur,rp,sp,Yr,op,po,it,np,uo,dt,Gr,ip,Eo,kt,dp,vo,La,Ev='<code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>maaş<span class="token punctuation">)</span> <span class="token keyword">as</span> ToplamMaaş <span class="token keyword">FROM</span> kisiler</code>',yo,ft,kp,_o,oa,Ir,Qr,Vr,fp,pp,Kr,xr,Jr,up,To,na,Ep,Xr,vp,yp,co,pt,_p,mo,ut,Tp,bo,U,jr,Et,cp,mp,Wr,vt,bp,hp,Zr,yt,Dp,Sp,$r,_t,Ap;return{c(){Y=l("img"),gr=i(),Oa=l("p"),Qo=o("Programlama dillerinde olduğu gibi SQL’de de bir çok yerleşik (built-in) fonksiyon mevcuttur. Bunlar temel olarak kümeleme (aggregate) fonksiyonları ve skalar (scalar - iyi bir önerisi olan?) fonksiyonlar diye ikiye ayrılır. Bu yazıda en çok kullanılan kümeleme fonksiyonlarını ele alacağız. Yine sık kullanılan skalar fonksiyonlar ise bir başka makalenin konusu olacak."),as=i(),Q=l("p"),Vo=o("Kümeleme fonksiyonları tablodaki bir kolon (alan) üzerindeki değerler için belli matematiksel hesaplamalar yapar ve sonuç döndürürler. Örneğin AVG (average-ortalama) fonksiyonu bir kolondaki tüm değerlerin ortalamasını hesaplamamıza yardımcı olur. Makale boyunca örnek sorgular aşağıdaki "),mt=l("em"),Ko=o("kisiler"),xo=o(" tablosu üzerinde işletilecektir. Tabloya söyle bir göz atıp devam edelim."),ts=i(),V=l("p"),bt=l("strong"),Jo=o("Not:"),Xo=o(" Bu arada diğer SQL derslerine "),wa=l("a"),jo=o("buradan ulaşabilirsiniz"),es=i(),K=l("table"),ht=l("thead"),v=l("tr"),Dt=l("th"),Wo=o("id"),Zo=i(),St=l("th"),$o=o("Ad"),go=i(),At=l("th"),an=o("Soyad"),tn=i(),Rt=l("th"),en=o("Yas"),ln=i(),Lt=l("th"),rn=o("Cinsiyet"),sn=i(),Ot=l("th"),on=o("Şehir"),nn=i(),wt=l("th"),dn=o("Ülke"),kn=i(),Mt=l("th"),fn=o("Maaş"),pn=i(),p=l("tbody"),y=l("tr"),zt=l("td"),un=o("2"),En=i(),Pt=l("td"),vn=o("Ahmet"),yn=i(),Ht=l("td"),_n=o("Yılmaz"),Tn=i(),Bt=l("td"),cn=o("20"),mn=i(),Ct=l("td"),bn=o("1"),hn=i(),Nt=l("td"),Dn=o("Ankara"),Sn=i(),Ft=l("td"),An=o("Türkiye"),Rn=i(),qt=l("td"),Ln=o("2000"),On=i(),_=l("tr"),Ut=l("td"),wn=o("3"),Mn=i(),Yt=l("td"),zn=o("Mehmet"),Pn=i(),Gt=l("td"),Hn=o("Efe"),Bn=i(),It=l("td"),Cn=o("22"),Nn=i(),Qt=l("td"),Fn=o("1"),qn=i(),Vt=l("td"),Un=o("Bolu"),Yn=i(),Kt=l("td"),Gn=o("Türkiye"),In=i(),xt=l("td"),Qn=o("2000"),Vn=i(),T=l("tr"),Jt=l("td"),Kn=o("4"),xn=i(),Xt=l("td"),Jn=o("Ayşe"),Xn=i(),jt=l("td"),jn=o("Can"),Wn=i(),Wt=l("td"),Zn=o("23"),$n=i(),Zt=l("td"),gn=o("0"),ai=i(),$t=l("td"),ti=o("İstanbul"),ei=i(),gt=l("td"),li=o("Türkiye"),ri=i(),ae=l("td"),si=o("3500"),oi=i(),c=l("tr"),te=l("td"),ni=o("5"),ii=i(),ee=l("td"),di=o("Fatma"),ki=i(),le=l("td"),fi=o("Ak"),pi=i(),re=l("td"),ui=o("35"),Ei=i(),se=l("td"),vi=o("0"),yi=i(),oe=l("td"),_i=o("Ankara"),Ti=i(),ne=l("td"),ci=o("Türkiye"),mi=i(),ie=l("td"),bi=o("3200"),hi=i(),m=l("tr"),de=l("td"),Di=o("6"),Si=i(),ke=l("td"),Ai=o("John"),Ri=i(),fe=l("td"),Li=o("Smith"),Oi=i(),pe=l("td"),wi=o("45"),Mi=i(),ue=l("td"),zi=o("1"),Pi=i(),Ee=l("td"),Hi=o("New York"),Bi=i(),ve=l("td"),Ci=o("USA"),Ni=i(),ye=l("td"),Fi=o("3500"),qi=i(),b=l("tr"),_e=l("td"),Ui=o("7"),Yi=i(),Te=l("td"),Gi=o("Ellen"),Ii=i(),ce=l("td"),Qi=o("Smith"),Vi=i(),me=l("td"),Ki=o("40"),xi=i(),be=l("td"),Ji=o("0"),Xi=i(),he=l("td"),ji=o("New York"),Wi=i(),De=l("td"),Zi=o("USA"),$i=i(),Se=l("td"),gi=o("3500"),ad=i(),h=l("tr"),Ae=l("td"),td=o("8"),ed=i(),Re=l("td"),ld=o("Hans"),rd=i(),Le=l("td"),sd=o("Müller"),od=i(),Oe=l("td"),nd=o("30"),id=i(),we=l("td"),dd=o("1"),kd=i(),Me=l("td"),fd=o("Berlin"),pd=i(),ze=l("td"),ud=o("Almanya"),Ed=i(),Pe=l("td"),vd=o("4000"),yd=i(),D=l("tr"),He=l("td"),_d=o("9"),Td=i(),Be=l("td"),cd=o("Frank"),md=i(),Ce=l("td"),bd=o("Cesanne"),hd=i(),Ne=l("td"),Dd=o("35"),Sd=i(),Fe=l("td"),Ad=o("1"),Rd=i(),qe=l("td"),Ld=o("Paris"),Od=i(),Ue=l("td"),wd=o("Fransa"),Md=i(),Ye=l("td"),zd=o("3700"),Pd=i(),S=l("tr"),Ge=l("td"),Hd=o("10"),Bd=i(),Ie=l("td"),Cd=o("Abbas"),Nd=i(),Qe=l("td"),Fd=o("Demir"),qd=i(),Ve=l("td"),Ud=o("26"),Yd=i(),Ke=l("td"),Gd=o("1"),Id=i(),xe=l("td"),Qd=o("Adana"),Vd=i(),Je=l("td"),Kd=o("Türkiye"),xd=i(),Xe=l("td"),Jd=o("2000"),Xd=i(),A=l("tr"),je=l("td"),jd=o("11"),Wd=i(),We=l("td"),Zd=o("Hatice"),$d=i(),Ze=l("td"),gd=o("Topçu"),ak=i(),$e=l("td"),tk=o("26"),ek=i(),ge=l("td"),lk=o("0"),rk=i(),al=l("td"),sk=o("Hatay"),ok=i(),tl=l("td"),nk=o("Türkiye"),ik=i(),el=l("td"),dk=o("2200"),kk=i(),R=l("tr"),ll=l("td"),fk=o("12"),pk=i(),rl=l("td"),uk=o("Gülsüm"),Ek=i(),sl=l("td"),vk=o("Demir"),yk=i(),ol=l("td"),_k=o("35"),Tk=i(),nl=l("td"),ck=o("0"),mk=i(),il=l("td"),bk=o("Adana"),hk=i(),dl=l("td"),Dk=o("Türkiye"),Sk=i(),kl=l("td"),Ak=o("2000"),ls=i(),Ma=l("p"),fl=l("strong"),Rk=o("AVG() Fonksiyonu"),rs=i(),za=l("p"),Lk=o("Ortalama hesaplar. Örneğin çalışanların ortalama ne kadar maaş aldığını hesaplamak istersek:"),ss=i(),da=l("pre"),os=i(),Pa=l("p"),Ok=o("Sorgunun çıktısı aşağıdaki gibi olacaktır:"),ns=i(),x=l("table"),pl=l("thead"),ul=l("tr"),El=l("th"),wk=o("AVG(maaş)"),Mk=i(),vl=l("tbody"),yl=l("tr"),_l=l("td"),zk=o("2872.7273"),is=i(),Ha=l("p"),Pk=o("Eğer çıktının biraz daha okunur olmasını arzu edersek sorgu üzerinde ufak bir değişiklik yapabiliriz:"),ds=i(),ka=l("pre"),ks=i(),Ba=l("p"),Hk=o("Sorgunun çıktısı aşağıdaki gibi olacaktır:"),fs=i(),J=l("table"),Tl=l("thead"),cl=l("tr"),ml=l("th"),Bk=o("OrtalamaMaaş"),Ck=i(),bl=l("tbody"),hl=l("tr"),Dl=l("td"),Nk=o("2872.7273"),ps=i(),Ca=l("p"),Fk=o("Eğer yalnızca Türkiye’de çalışanların maaş ortalamasını hesaplamak istersek:"),us=i(),fa=l("pre"),Es=i(),Na=l("p"),qk=o("Sorgunun çıktısı aşağıdaki gibi olacaktır:"),vs=i(),X=l("table"),Sl=l("thead"),Al=l("tr"),Rl=l("th"),Uk=o("OrtalamaMaaş"),Yk=i(),Ll=l("tbody"),Ol=l("tr"),wl=l("td"),Gk=o("2414.2857"),ys=i(),Fa=l("p"),Ml=l("strong"),Ik=o("COUNT() Fonksiyonu"),_s=i(),qa=l("p"),Qk=o("Bir alandaki değerlerin kaç adet olduğunu yani sayısını hesaplar. Örneğin kaç çalışanın olduğunu hesaplamak istersek:"),Ts=i(),pa=l("pre"),cs=i(),Ua=l("p"),Vk=o("Sorgunun çıktısı aşağıdaki gibi olacaktır:"),ms=i(),j=l("table"),zl=l("thead"),Pl=l("tr"),Hl=l("th"),Kk=o("Sayı"),xk=i(),Bl=l("tbody"),Cl=l("tr"),Nl=l("td"),Jk=o("11"),bs=i(),Ya=l("p"),Xk=o("Sorguyu aşağıdaki gibi değiştirsek de sonuç değişmez:"),hs=i(),ua=l("pre"),Ds=i(),G=l("p"),jk=o("Çünkü COUNT fonksiyonu alandaki değerlerin ne olduğu ile ilgilenmez, sadece kaç adet değer olduğu ile ilgilenir. Eğer boş (NULL) değerler var ise bunlar hesaba katılmaz. Yani yukarıdaki tabloda eğer bir çalışanın maaş bilgisi boş olsaydı, "),Fl=l("code"),Wk=o("COUNT(maaş)"),Zk=o(" sorgusu 10 sonucunu verirken "),ql=l("code"),$k=o("COUNT(id)"),gk=o(" sorgusu 11 sonucunu verecekti.  "),Ss=i(),Ga=l("p"),Ul=l("strong"),af=o("COUNT(*) Kullanımı"),As=i(),W=l("p"),tf=o("Eğer kesin olarak kayıt sayısını istiyorsak her zaman ifadeyi "),Yl=l("code"),ef=o("COUNT(*)"),lf=o(" şeklinde kullanmalıyız. Bu ifade her zaman tablodaki ya da sonuç kümesindeki kayıt sayısını (satır sayısını) döndürür."),Rs=i(),Ea=l("pre"),Ls=i(),Ia=l("p"),rf=o("Sorgu kisiler tablosunda kaç kayıt olduğunu hesaplar:"),Os=i(),Z=l("table"),Gl=l("thead"),Il=l("tr"),Ql=l("th"),sf=o("Sayı"),of=i(),Vl=l("tbody"),Kl=l("tr"),xl=l("td"),nf=o("11"),ws=i(),Qa=l("p"),df=o("Eğer Amerika’da çalışanların sayısını hesaplamak istersek:"),Ms=i(),va=l("pre"),zs=i(),Va=l("p"),kf=o("Sorgunun çıktısı aşağıdaki gibi olacaktır:"),Ps=i(),$=l("table"),Jl=l("thead"),Xl=l("tr"),jl=l("th"),ff=o("Sayı"),pf=i(),Wl=l("tbody"),Zl=l("tr"),$l=l("td"),uf=o("2"),Hs=i(),Ka=l("p"),gl=l("strong"),Ef=o("COUNT (DISTINCT kolon_adı) Kullanımı"),Bs=i(),I=l("p"),vf=o("DISTINCT ifadesini "),xa=l("a"),yf=o("bu makalede"),_f=o(" anlatmıştım. Eğer bilmiyorsanız önce o kısa makaleyi okumanızı öneririm. Eğer bir kolondaki farklı değerlerin sayısını öğrenmek istiyorsak COUNT ifadesini "),ar=l("code"),Tf=o("COUNT (DISTINCT kolon_adı)"),cf=o(" şeklinde kullanırız. Örneğin kaç farklı ülkeden çalışan olduğunu hesaplamak istersek:"),Cs=i(),ya=l("pre"),Ns=i(),Ja=l("p"),mf=o("Tabloda ülke alanında 4 farklı değer (Türkiye, USA, Fransa, Almanya) olduğundan çıktı aşağıdaki gibi olacaktır."),Fs=i(),g=l("table"),tr=l("thead"),er=l("tr"),lr=l("th"),bf=o("ÜlkeSayısı"),hf=i(),rr=l("tbody"),sr=l("tr"),or=l("td"),Df=o("4"),qs=i(),Xa=l("p"),nr=l("strong"),Sf=o("FIRST() Fonksiyonu"),Us=i(),ja=l("p"),Af=o("Bir alandaki ilk değeri döndürür. Örneğin tablodaki ilk ismi öğrenmek istiyorsak."),Ys=i(),_a=l("pre"),Gs=i(),Wa=l("p"),Rf=o("Çıktı aşağıdaki gibi olacaktır:"),Is=i(),aa=l("table"),ir=l("thead"),dr=l("tr"),kr=l("th"),Lf=o("ilkİsim"),Of=i(),fr=l("tbody"),pr=l("tr"),ur=l("td"),wf=o("Ahmet"),Qs=i(),Za=l("p"),Mf=o("Ancak bu MySQL First fonksiyonunu desteklemez. Aynı işi yapan sorgu MySQL’de aşağıdaki gibidir."),Vs=i(),Ta=l("pre"),Ks=i(),ta=l("p"),zf=o("Bu arada Limit konusu "),$a=l("a"),Pf=o("bu makalede"),Hf=o(" anlatıldı. Bilmiyorsanız bir göz atmanızda fayda var.  "),xs=i(),ga=l("p"),Er=l("strong"),Bf=o("LAST() Fonksiyonu"),Js=i(),at=l("p"),Cf=o("Tahmin edebileceğiniz gibi en sondaki değeri döndürür. Ve yine tahmin edebileceğiniz gibi MySQL tarafından desteklenmez. Tablodaki son soyisim değerini döndüren sorgunun standart SQL ve MySQL versiyonları aşağıdaki gibidir:"),Xs=i(),ca=l("pre"),js=i(),ma=l("pre"),Ws=i(),tt=l("p"),Nf=o("Her iki sorgunun çıktısı aşağıdaki gibidir."),Zs=i(),ea=l("table"),vr=l("thead"),yr=l("tr"),_r=l("th"),Ff=o("SonSoyad"),qf=i(),Tr=l("tbody"),cr=l("tr"),mr=l("td"),Uf=o("Demir"),$s=i(),et=l("p"),br=l("strong"),Yf=o("MAX() ve MIN() Fonksiyonları"),gs=i(),lt=l("p"),Gf=o("Bir alandaki en büyük ve en küçük değerleri döndürürler. En yaşlı ve en genç çalışanları belirlemek istersek:"),ao=i(),ba=l("pre"),to=i(),rt=l("p"),If=o("Çıktı aşağıdaki gibi olacaktır:"),eo=i(),la=l("table"),hr=l("thead"),Dr=l("tr"),Sr=l("th"),Qf=o("EnYaşlı"),Vf=i(),Ar=l("tbody"),Rr=l("tr"),Lr=l("td"),Kf=o("45"),lo=i(),st=l("p"),xf=o(" "),ro=i(),ha=l("pre"),so=i(),ot=l("p"),Jf=o("Çıktı aşağıdaki gibi olacaktır:"),oo=i(),ra=l("table"),Or=l("thead"),wr=l("tr"),Mr=l("th"),Xf=o("EnGenç"),jf=i(),zr=l("tbody"),Pr=l("tr"),Hr=l("td"),Wf=o("20"),no=i(),Da=l("p"),Br=l("strong"),Zf=o("Dikkat:"),$f=o(" Eğer en yaşlı çalışanı ismi ile birlikte sorgulamak isteseydik aşağıdaki gibi bir sorgunun işimizi görebileğini düşünebilirsiniz. Ancak bu sorgu hatalıdır."),io=i(),Sa=l("pre"),ko=i(),nt=l("p"),gf=o("Sorgu ad alanına tablodaki ilk ismi getirirken MAX(yas) alanına maksimum yaşı getirir:"),fo=i(),sa=l("table"),Cr=l("thead"),Aa=l("tr"),Nr=l("th"),ap=o("ad"),tp=i(),Fr=l("th"),ep=o("EnYaşlı"),lp=i(),qr=l("tbody"),Ra=l("tr"),Ur=l("td"),rp=o("Ahmet"),sp=i(),Yr=l("td"),op=o("45"),po=i(),it=l("p"),np=o("Ancak Ahmet isimli çalışanın yaşı 45 değildir. Fonksiyonun sadece maksimum değer ile ilgilendiğini unutmayalım. En yaşlı çalışanı ismi ile birlikte bulabilmek için iç-içe (iki seviyeli) sorgu yazmamız gerekiyor ki bu da ileriki bir makalenin konusu olacak inş.  "),uo=i(),dt=l("p"),Gr=l("strong"),ip=o("SUM() Fonksiyonu"),Eo=i(),kt=l("p"),dp=o("Sayısal değerler içeren bir kolondaki değerlerin toplamını döndürür. Örneğin aylık ödenen toplam maaşı öğrenmek istersek:"),vo=i(),La=l("pre"),yo=i(),ft=l("p"),kp=o("Çıktı aşağıdaki gibidir:"),_o=i(),oa=l("table"),Ir=l("thead"),Qr=l("tr"),Vr=l("th"),fp=o("ToplamMaaş"),pp=i(),Kr=l("tbody"),xr=l("tr"),Jr=l("td"),up=o("31600"),To=i(),na=l("p"),Ep=o("Son olarak kümeleme fonksiyonlarının "),Xr=l("code"),vp=o("GROUP BY"),yp=o(" ifadesi ile birlikte sıkça kullanıldığını hatırlatalım. Bunun yanında iç-içe sorgularda da sıkça kümeleme fonksiyonu kullanılır. Sonraki makalelerde her iki konuyu da örneklerle inceleyeceğiz."),co=i(),pt=l("p"),_p=o("Herkese kolay gelsin"),mo=i(),ut=l("h3"),Tp=o("İlgili Diğer Makaleler"),bo=i(),U=l("ul"),jr=l("li"),Et=l("a"),cp=o("SQL 12: Sorguda Birden Fazla Tablo Kullanma: Join-1"),mp=i(),Wr=l("li"),vt=l("a"),bp=o("SQL 13: Sorguda Birden Fazla Tablo Kullanma: Join-2"),hp=i(),Zr=l("li"),yt=l("a"),Dp=o("SQL 15: GROUP BY İfadesi"),Sp=i(),$r=l("li"),_t=l("a"),Ap=o("SQL 16: HAVING İfadesi"),this.h()},l(t){Y=r(t,"IMG",{align:!0,style:!0,src:!0}),gr=d(t),Oa=r(t,"P",{});var k=s(Oa);Qo=n(k,"Programlama dillerinde olduğu gibi SQL’de de bir çok yerleşik (built-in) fonksiyon mevcuttur. Bunlar temel olarak kümeleme (aggregate) fonksiyonları ve skalar (scalar - iyi bir önerisi olan?) fonksiyonlar diye ikiye ayrılır. Bu yazıda en çok kullanılan kümeleme fonksiyonlarını ele alacağız. Yine sık kullanılan skalar fonksiyonlar ise bir başka makalenin konusu olacak."),k.forEach(e),as=d(t),Q=r(t,"P",{});var ho=s(Q);Vo=n(ho,"Kümeleme fonksiyonları tablodaki bir kolon (alan) üzerindeki değerler için belli matematiksel hesaplamalar yapar ve sonuç döndürürler. Örneğin AVG (average-ortalama) fonksiyonu bir kolondaki tüm değerlerin ortalamasını hesaplamamıza yardımcı olur. Makale boyunca örnek sorgular aşağıdaki "),mt=r(ho,"EM",{});var wp=s(mt);Ko=n(wp,"kisiler"),wp.forEach(e),xo=n(ho," tablosu üzerinde işletilecektir. Tabloya söyle bir göz atıp devam edelim."),ho.forEach(e),ts=d(t),V=r(t,"P",{});var Do=s(V);bt=r(Do,"STRONG",{});var Mp=s(bt);Jo=n(Mp,"Not:"),Mp.forEach(e),Xo=n(Do," Bu arada diğer SQL derslerine "),wa=r(Do,"A",{href:!0});var zp=s(wa);jo=n(zp,"buradan ulaşabilirsiniz"),zp.forEach(e),Do.forEach(e),es=d(t),K=r(t,"TABLE",{});var So=s(K);ht=r(So,"THEAD",{});var Pp=s(ht);v=r(Pp,"TR",{});var L=s(v);Dt=r(L,"TH",{});var Hp=s(Dt);Wo=n(Hp,"id"),Hp.forEach(e),Zo=d(L),St=r(L,"TH",{});var Bp=s(St);$o=n(Bp,"Ad"),Bp.forEach(e),go=d(L),At=r(L,"TH",{});var Cp=s(At);an=n(Cp,"Soyad"),Cp.forEach(e),tn=d(L),Rt=r(L,"TH",{});var Np=s(Rt);en=n(Np,"Yas"),Np.forEach(e),ln=d(L),Lt=r(L,"TH",{});var Fp=s(Lt);rn=n(Fp,"Cinsiyet"),Fp.forEach(e),sn=d(L),Ot=r(L,"TH",{});var qp=s(Ot);on=n(qp,"Şehir"),qp.forEach(e),nn=d(L),wt=r(L,"TH",{});var Up=s(wt);dn=n(Up,"Ülke"),Up.forEach(e),kn=d(L),Mt=r(L,"TH",{});var Yp=s(Mt);fn=n(Yp,"Maaş"),Yp.forEach(e),L.forEach(e),Pp.forEach(e),pn=d(So),p=r(So,"TBODY",{});var E=s(p);y=r(E,"TR",{});var O=s(y);zt=r(O,"TD",{});var Gp=s(zt);un=n(Gp,"2"),Gp.forEach(e),En=d(O),Pt=r(O,"TD",{});var Ip=s(Pt);vn=n(Ip,"Ahmet"),Ip.forEach(e),yn=d(O),Ht=r(O,"TD",{});var Qp=s(Ht);_n=n(Qp,"Yılmaz"),Qp.forEach(e),Tn=d(O),Bt=r(O,"TD",{});var Vp=s(Bt);cn=n(Vp,"20"),Vp.forEach(e),mn=d(O),Ct=r(O,"TD",{});var Kp=s(Ct);bn=n(Kp,"1"),Kp.forEach(e),hn=d(O),Nt=r(O,"TD",{});var xp=s(Nt);Dn=n(xp,"Ankara"),xp.forEach(e),Sn=d(O),Ft=r(O,"TD",{});var Jp=s(Ft);An=n(Jp,"Türkiye"),Jp.forEach(e),Rn=d(O),qt=r(O,"TD",{});var Xp=s(qt);Ln=n(Xp,"2000"),Xp.forEach(e),O.forEach(e),On=d(E),_=r(E,"TR",{});var w=s(_);Ut=r(w,"TD",{});var jp=s(Ut);wn=n(jp,"3"),jp.forEach(e),Mn=d(w),Yt=r(w,"TD",{});var Wp=s(Yt);zn=n(Wp,"Mehmet"),Wp.forEach(e),Pn=d(w),Gt=r(w,"TD",{});var Zp=s(Gt);Hn=n(Zp,"Efe"),Zp.forEach(e),Bn=d(w),It=r(w,"TD",{});var $p=s(It);Cn=n($p,"22"),$p.forEach(e),Nn=d(w),Qt=r(w,"TD",{});var gp=s(Qt);Fn=n(gp,"1"),gp.forEach(e),qn=d(w),Vt=r(w,"TD",{});var a1=s(Vt);Un=n(a1,"Bolu"),a1.forEach(e),Yn=d(w),Kt=r(w,"TD",{});var t1=s(Kt);Gn=n(t1,"Türkiye"),t1.forEach(e),In=d(w),xt=r(w,"TD",{});var e1=s(xt);Qn=n(e1,"2000"),e1.forEach(e),w.forEach(e),Vn=d(E),T=r(E,"TR",{});var M=s(T);Jt=r(M,"TD",{});var l1=s(Jt);Kn=n(l1,"4"),l1.forEach(e),xn=d(M),Xt=r(M,"TD",{});var r1=s(Xt);Jn=n(r1,"Ayşe"),r1.forEach(e),Xn=d(M),jt=r(M,"TD",{});var s1=s(jt);jn=n(s1,"Can"),s1.forEach(e),Wn=d(M),Wt=r(M,"TD",{});var o1=s(Wt);Zn=n(o1,"23"),o1.forEach(e),$n=d(M),Zt=r(M,"TD",{});var n1=s(Zt);gn=n(n1,"0"),n1.forEach(e),ai=d(M),$t=r(M,"TD",{});var i1=s($t);ti=n(i1,"İstanbul"),i1.forEach(e),ei=d(M),gt=r(M,"TD",{});var d1=s(gt);li=n(d1,"Türkiye"),d1.forEach(e),ri=d(M),ae=r(M,"TD",{});var k1=s(ae);si=n(k1,"3500"),k1.forEach(e),M.forEach(e),oi=d(E),c=r(E,"TR",{});var z=s(c);te=r(z,"TD",{});var f1=s(te);ni=n(f1,"5"),f1.forEach(e),ii=d(z),ee=r(z,"TD",{});var p1=s(ee);di=n(p1,"Fatma"),p1.forEach(e),ki=d(z),le=r(z,"TD",{});var u1=s(le);fi=n(u1,"Ak"),u1.forEach(e),pi=d(z),re=r(z,"TD",{});var E1=s(re);ui=n(E1,"35"),E1.forEach(e),Ei=d(z),se=r(z,"TD",{});var v1=s(se);vi=n(v1,"0"),v1.forEach(e),yi=d(z),oe=r(z,"TD",{});var y1=s(oe);_i=n(y1,"Ankara"),y1.forEach(e),Ti=d(z),ne=r(z,"TD",{});var _1=s(ne);ci=n(_1,"Türkiye"),_1.forEach(e),mi=d(z),ie=r(z,"TD",{});var T1=s(ie);bi=n(T1,"3200"),T1.forEach(e),z.forEach(e),hi=d(E),m=r(E,"TR",{});var P=s(m);de=r(P,"TD",{});var c1=s(de);Di=n(c1,"6"),c1.forEach(e),Si=d(P),ke=r(P,"TD",{});var m1=s(ke);Ai=n(m1,"John"),m1.forEach(e),Ri=d(P),fe=r(P,"TD",{});var b1=s(fe);Li=n(b1,"Smith"),b1.forEach(e),Oi=d(P),pe=r(P,"TD",{});var h1=s(pe);wi=n(h1,"45"),h1.forEach(e),Mi=d(P),ue=r(P,"TD",{});var D1=s(ue);zi=n(D1,"1"),D1.forEach(e),Pi=d(P),Ee=r(P,"TD",{});var S1=s(Ee);Hi=n(S1,"New York"),S1.forEach(e),Bi=d(P),ve=r(P,"TD",{});var A1=s(ve);Ci=n(A1,"USA"),A1.forEach(e),Ni=d(P),ye=r(P,"TD",{});var R1=s(ye);Fi=n(R1,"3500"),R1.forEach(e),P.forEach(e),qi=d(E),b=r(E,"TR",{});var H=s(b);_e=r(H,"TD",{});var L1=s(_e);Ui=n(L1,"7"),L1.forEach(e),Yi=d(H),Te=r(H,"TD",{});var O1=s(Te);Gi=n(O1,"Ellen"),O1.forEach(e),Ii=d(H),ce=r(H,"TD",{});var w1=s(ce);Qi=n(w1,"Smith"),w1.forEach(e),Vi=d(H),me=r(H,"TD",{});var M1=s(me);Ki=n(M1,"40"),M1.forEach(e),xi=d(H),be=r(H,"TD",{});var z1=s(be);Ji=n(z1,"0"),z1.forEach(e),Xi=d(H),he=r(H,"TD",{});var P1=s(he);ji=n(P1,"New York"),P1.forEach(e),Wi=d(H),De=r(H,"TD",{});var H1=s(De);Zi=n(H1,"USA"),H1.forEach(e),$i=d(H),Se=r(H,"TD",{});var B1=s(Se);gi=n(B1,"3500"),B1.forEach(e),H.forEach(e),ad=d(E),h=r(E,"TR",{});var B=s(h);Ae=r(B,"TD",{});var C1=s(Ae);td=n(C1,"8"),C1.forEach(e),ed=d(B),Re=r(B,"TD",{});var N1=s(Re);ld=n(N1,"Hans"),N1.forEach(e),rd=d(B),Le=r(B,"TD",{});var F1=s(Le);sd=n(F1,"Müller"),F1.forEach(e),od=d(B),Oe=r(B,"TD",{});var q1=s(Oe);nd=n(q1,"30"),q1.forEach(e),id=d(B),we=r(B,"TD",{});var U1=s(we);dd=n(U1,"1"),U1.forEach(e),kd=d(B),Me=r(B,"TD",{});var Y1=s(Me);fd=n(Y1,"Berlin"),Y1.forEach(e),pd=d(B),ze=r(B,"TD",{});var G1=s(ze);ud=n(G1,"Almanya"),G1.forEach(e),Ed=d(B),Pe=r(B,"TD",{});var I1=s(Pe);vd=n(I1,"4000"),I1.forEach(e),B.forEach(e),yd=d(E),D=r(E,"TR",{});var C=s(D);He=r(C,"TD",{});var Q1=s(He);_d=n(Q1,"9"),Q1.forEach(e),Td=d(C),Be=r(C,"TD",{});var V1=s(Be);cd=n(V1,"Frank"),V1.forEach(e),md=d(C),Ce=r(C,"TD",{});var K1=s(Ce);bd=n(K1,"Cesanne"),K1.forEach(e),hd=d(C),Ne=r(C,"TD",{});var x1=s(Ne);Dd=n(x1,"35"),x1.forEach(e),Sd=d(C),Fe=r(C,"TD",{});var J1=s(Fe);Ad=n(J1,"1"),J1.forEach(e),Rd=d(C),qe=r(C,"TD",{});var X1=s(qe);Ld=n(X1,"Paris"),X1.forEach(e),Od=d(C),Ue=r(C,"TD",{});var j1=s(Ue);wd=n(j1,"Fransa"),j1.forEach(e),Md=d(C),Ye=r(C,"TD",{});var W1=s(Ye);zd=n(W1,"3700"),W1.forEach(e),C.forEach(e),Pd=d(E),S=r(E,"TR",{});var N=s(S);Ge=r(N,"TD",{});var Z1=s(Ge);Hd=n(Z1,"10"),Z1.forEach(e),Bd=d(N),Ie=r(N,"TD",{});var $1=s(Ie);Cd=n($1,"Abbas"),$1.forEach(e),Nd=d(N),Qe=r(N,"TD",{});var g1=s(Qe);Fd=n(g1,"Demir"),g1.forEach(e),qd=d(N),Ve=r(N,"TD",{});var au=s(Ve);Ud=n(au,"26"),au.forEach(e),Yd=d(N),Ke=r(N,"TD",{});var tu=s(Ke);Gd=n(tu,"1"),tu.forEach(e),Id=d(N),xe=r(N,"TD",{});var eu=s(xe);Qd=n(eu,"Adana"),eu.forEach(e),Vd=d(N),Je=r(N,"TD",{});var lu=s(Je);Kd=n(lu,"Türkiye"),lu.forEach(e),xd=d(N),Xe=r(N,"TD",{});var ru=s(Xe);Jd=n(ru,"2000"),ru.forEach(e),N.forEach(e),Xd=d(E),A=r(E,"TR",{});var F=s(A);je=r(F,"TD",{});var su=s(je);jd=n(su,"11"),su.forEach(e),Wd=d(F),We=r(F,"TD",{});var ou=s(We);Zd=n(ou,"Hatice"),ou.forEach(e),$d=d(F),Ze=r(F,"TD",{});var nu=s(Ze);gd=n(nu,"Topçu"),nu.forEach(e),ak=d(F),$e=r(F,"TD",{});var iu=s($e);tk=n(iu,"26"),iu.forEach(e),ek=d(F),ge=r(F,"TD",{});var du=s(ge);lk=n(du,"0"),du.forEach(e),rk=d(F),al=r(F,"TD",{});var ku=s(al);sk=n(ku,"Hatay"),ku.forEach(e),ok=d(F),tl=r(F,"TD",{});var fu=s(tl);nk=n(fu,"Türkiye"),fu.forEach(e),ik=d(F),el=r(F,"TD",{});var pu=s(el);dk=n(pu,"2200"),pu.forEach(e),F.forEach(e),kk=d(E),R=r(E,"TR",{});var q=s(R);ll=r(q,"TD",{});var uu=s(ll);fk=n(uu,"12"),uu.forEach(e),pk=d(q),rl=r(q,"TD",{});var Eu=s(rl);uk=n(Eu,"Gülsüm"),Eu.forEach(e),Ek=d(q),sl=r(q,"TD",{});var vu=s(sl);vk=n(vu,"Demir"),vu.forEach(e),yk=d(q),ol=r(q,"TD",{});var yu=s(ol);_k=n(yu,"35"),yu.forEach(e),Tk=d(q),nl=r(q,"TD",{});var _u=s(nl);ck=n(_u,"0"),_u.forEach(e),mk=d(q),il=r(q,"TD",{});var Tu=s(il);bk=n(Tu,"Adana"),Tu.forEach(e),hk=d(q),dl=r(q,"TD",{});var cu=s(dl);Dk=n(cu,"Türkiye"),cu.forEach(e),Sk=d(q),kl=r(q,"TD",{});var mu=s(kl);Ak=n(mu,"2000"),mu.forEach(e),q.forEach(e),E.forEach(e),So.forEach(e),ls=d(t),Ma=r(t,"P",{});var bu=s(Ma);fl=r(bu,"STRONG",{});var hu=s(fl);Rk=n(hu,"AVG() Fonksiyonu"),hu.forEach(e),bu.forEach(e),rs=d(t),za=r(t,"P",{});var Du=s(za);Lk=n(Du,"Ortalama hesaplar. Örneğin çalışanların ortalama ne kadar maaş aldığını hesaplamak istersek:"),Du.forEach(e),ss=d(t),da=r(t,"PRE",{class:!0});var vv=s(da);vv.forEach(e),os=d(t),Pa=r(t,"P",{});var Su=s(Pa);Ok=n(Su,"Sorgunun çıktısı aşağıdaki gibi olacaktır:"),Su.forEach(e),ns=d(t),x=r(t,"TABLE",{});var Ao=s(x);pl=r(Ao,"THEAD",{});var Au=s(pl);ul=r(Au,"TR",{});var Ru=s(ul);El=r(Ru,"TH",{});var Lu=s(El);wk=n(Lu,"AVG(maaş)"),Lu.forEach(e),Ru.forEach(e),Au.forEach(e),Mk=d(Ao),vl=r(Ao,"TBODY",{});var Ou=s(vl);yl=r(Ou,"TR",{});var wu=s(yl);_l=r(wu,"TD",{});var Mu=s(_l);zk=n(Mu,"2872.7273"),Mu.forEach(e),wu.forEach(e),Ou.forEach(e),Ao.forEach(e),is=d(t),Ha=r(t,"P",{});var zu=s(Ha);Pk=n(zu,"Eğer çıktının biraz daha okunur olmasını arzu edersek sorgu üzerinde ufak bir değişiklik yapabiliriz:"),zu.forEach(e),ds=d(t),ka=r(t,"PRE",{class:!0});var yv=s(ka);yv.forEach(e),ks=d(t),Ba=r(t,"P",{});var Pu=s(Ba);Hk=n(Pu,"Sorgunun çıktısı aşağıdaki gibi olacaktır:"),Pu.forEach(e),fs=d(t),J=r(t,"TABLE",{});var Ro=s(J);Tl=r(Ro,"THEAD",{});var Hu=s(Tl);cl=r(Hu,"TR",{});var Bu=s(cl);ml=r(Bu,"TH",{});var Cu=s(ml);Bk=n(Cu,"OrtalamaMaaş"),Cu.forEach(e),Bu.forEach(e),Hu.forEach(e),Ck=d(Ro),bl=r(Ro,"TBODY",{});var Nu=s(bl);hl=r(Nu,"TR",{});var Fu=s(hl);Dl=r(Fu,"TD",{});var qu=s(Dl);Nk=n(qu,"2872.7273"),qu.forEach(e),Fu.forEach(e),Nu.forEach(e),Ro.forEach(e),ps=d(t),Ca=r(t,"P",{});var Uu=s(Ca);Fk=n(Uu,"Eğer yalnızca Türkiye’de çalışanların maaş ortalamasını hesaplamak istersek:"),Uu.forEach(e),us=d(t),fa=r(t,"PRE",{class:!0});var _v=s(fa);_v.forEach(e),Es=d(t),Na=r(t,"P",{});var Yu=s(Na);qk=n(Yu,"Sorgunun çıktısı aşağıdaki gibi olacaktır:"),Yu.forEach(e),vs=d(t),X=r(t,"TABLE",{});var Lo=s(X);Sl=r(Lo,"THEAD",{});var Gu=s(Sl);Al=r(Gu,"TR",{});var Iu=s(Al);Rl=r(Iu,"TH",{});var Qu=s(Rl);Uk=n(Qu,"OrtalamaMaaş"),Qu.forEach(e),Iu.forEach(e),Gu.forEach(e),Yk=d(Lo),Ll=r(Lo,"TBODY",{});var Vu=s(Ll);Ol=r(Vu,"TR",{});var Ku=s(Ol);wl=r(Ku,"TD",{});var xu=s(wl);Gk=n(xu,"2414.2857"),xu.forEach(e),Ku.forEach(e),Vu.forEach(e),Lo.forEach(e),ys=d(t),Fa=r(t,"P",{});var Ju=s(Fa);Ml=r(Ju,"STRONG",{});var Xu=s(Ml);Ik=n(Xu,"COUNT() Fonksiyonu"),Xu.forEach(e),Ju.forEach(e),_s=d(t),qa=r(t,"P",{});var ju=s(qa);Qk=n(ju,"Bir alandaki değerlerin kaç adet olduğunu yani sayısını hesaplar. Örneğin kaç çalışanın olduğunu hesaplamak istersek:"),ju.forEach(e),Ts=d(t),pa=r(t,"PRE",{class:!0});var Tv=s(pa);Tv.forEach(e),cs=d(t),Ua=r(t,"P",{});var Wu=s(Ua);Vk=n(Wu,"Sorgunun çıktısı aşağıdaki gibi olacaktır:"),Wu.forEach(e),ms=d(t),j=r(t,"TABLE",{});var Oo=s(j);zl=r(Oo,"THEAD",{});var Zu=s(zl);Pl=r(Zu,"TR",{});var $u=s(Pl);Hl=r($u,"TH",{});var gu=s(Hl);Kk=n(gu,"Sayı"),gu.forEach(e),$u.forEach(e),Zu.forEach(e),xk=d(Oo),Bl=r(Oo,"TBODY",{});var aE=s(Bl);Cl=r(aE,"TR",{});var tE=s(Cl);Nl=r(tE,"TD",{});var eE=s(Nl);Jk=n(eE,"11"),eE.forEach(e),tE.forEach(e),aE.forEach(e),Oo.forEach(e),bs=d(t),Ya=r(t,"P",{});var lE=s(Ya);Xk=n(lE,"Sorguyu aşağıdaki gibi değiştirsek de sonuç değişmez:"),lE.forEach(e),hs=d(t),ua=r(t,"PRE",{class:!0});var cv=s(ua);cv.forEach(e),Ds=d(t),G=r(t,"P",{});var Tt=s(G);jk=n(Tt,"Çünkü COUNT fonksiyonu alandaki değerlerin ne olduğu ile ilgilenmez, sadece kaç adet değer olduğu ile ilgilenir. Eğer boş (NULL) değerler var ise bunlar hesaba katılmaz. Yani yukarıdaki tabloda eğer bir çalışanın maaş bilgisi boş olsaydı, "),Fl=r(Tt,"CODE",{});var rE=s(Fl);Wk=n(rE,"COUNT(maaş)"),rE.forEach(e),Zk=n(Tt," sorgusu 10 sonucunu verirken "),ql=r(Tt,"CODE",{});var sE=s(ql);$k=n(sE,"COUNT(id)"),sE.forEach(e),gk=n(Tt," sorgusu 11 sonucunu verecekti.  "),Tt.forEach(e),Ss=d(t),Ga=r(t,"P",{});var oE=s(Ga);Ul=r(oE,"STRONG",{});var nE=s(Ul);af=n(nE,"COUNT(*) Kullanımı"),nE.forEach(e),oE.forEach(e),As=d(t),W=r(t,"P",{});var wo=s(W);tf=n(wo,"Eğer kesin olarak kayıt sayısını istiyorsak her zaman ifadeyi "),Yl=r(wo,"CODE",{});var iE=s(Yl);ef=n(iE,"COUNT(*)"),iE.forEach(e),lf=n(wo," şeklinde kullanmalıyız. Bu ifade her zaman tablodaki ya da sonuç kümesindeki kayıt sayısını (satır sayısını) döndürür."),wo.forEach(e),Rs=d(t),Ea=r(t,"PRE",{class:!0});var mv=s(Ea);mv.forEach(e),Ls=d(t),Ia=r(t,"P",{});var dE=s(Ia);rf=n(dE,"Sorgu kisiler tablosunda kaç kayıt olduğunu hesaplar:"),dE.forEach(e),Os=d(t),Z=r(t,"TABLE",{});var Mo=s(Z);Gl=r(Mo,"THEAD",{});var kE=s(Gl);Il=r(kE,"TR",{});var fE=s(Il);Ql=r(fE,"TH",{});var pE=s(Ql);sf=n(pE,"Sayı"),pE.forEach(e),fE.forEach(e),kE.forEach(e),of=d(Mo),Vl=r(Mo,"TBODY",{});var uE=s(Vl);Kl=r(uE,"TR",{});var EE=s(Kl);xl=r(EE,"TD",{});var vE=s(xl);nf=n(vE,"11"),vE.forEach(e),EE.forEach(e),uE.forEach(e),Mo.forEach(e),ws=d(t),Qa=r(t,"P",{});var yE=s(Qa);df=n(yE,"Eğer Amerika’da çalışanların sayısını hesaplamak istersek:"),yE.forEach(e),Ms=d(t),va=r(t,"PRE",{class:!0});var bv=s(va);bv.forEach(e),zs=d(t),Va=r(t,"P",{});var _E=s(Va);kf=n(_E,"Sorgunun çıktısı aşağıdaki gibi olacaktır:"),_E.forEach(e),Ps=d(t),$=r(t,"TABLE",{});var zo=s($);Jl=r(zo,"THEAD",{});var TE=s(Jl);Xl=r(TE,"TR",{});var cE=s(Xl);jl=r(cE,"TH",{});var mE=s(jl);ff=n(mE,"Sayı"),mE.forEach(e),cE.forEach(e),TE.forEach(e),pf=d(zo),Wl=r(zo,"TBODY",{});var bE=s(Wl);Zl=r(bE,"TR",{});var hE=s(Zl);$l=r(hE,"TD",{});var DE=s($l);uf=n(DE,"2"),DE.forEach(e),hE.forEach(e),bE.forEach(e),zo.forEach(e),Hs=d(t),Ka=r(t,"P",{});var SE=s(Ka);gl=r(SE,"STRONG",{});var AE=s(gl);Ef=n(AE,"COUNT (DISTINCT kolon_adı) Kullanımı"),AE.forEach(e),SE.forEach(e),Bs=d(t),I=r(t,"P",{});var ct=s(I);vf=n(ct,"DISTINCT ifadesini "),xa=r(ct,"A",{href:!0});var RE=s(xa);yf=n(RE,"bu makalede"),RE.forEach(e),_f=n(ct," anlatmıştım. Eğer bilmiyorsanız önce o kısa makaleyi okumanızı öneririm. Eğer bir kolondaki farklı değerlerin sayısını öğrenmek istiyorsak COUNT ifadesini "),ar=r(ct,"CODE",{});var LE=s(ar);Tf=n(LE,"COUNT (DISTINCT kolon_adı)"),LE.forEach(e),cf=n(ct," şeklinde kullanırız. Örneğin kaç farklı ülkeden çalışan olduğunu hesaplamak istersek:"),ct.forEach(e),Cs=d(t),ya=r(t,"PRE",{class:!0});var hv=s(ya);hv.forEach(e),Ns=d(t),Ja=r(t,"P",{});var OE=s(Ja);mf=n(OE,"Tabloda ülke alanında 4 farklı değer (Türkiye, USA, Fransa, Almanya) olduğundan çıktı aşağıdaki gibi olacaktır."),OE.forEach(e),Fs=d(t),g=r(t,"TABLE",{});var Po=s(g);tr=r(Po,"THEAD",{});var wE=s(tr);er=r(wE,"TR",{});var ME=s(er);lr=r(ME,"TH",{});var zE=s(lr);bf=n(zE,"ÜlkeSayısı"),zE.forEach(e),ME.forEach(e),wE.forEach(e),hf=d(Po),rr=r(Po,"TBODY",{});var PE=s(rr);sr=r(PE,"TR",{});var HE=s(sr);or=r(HE,"TD",{});var BE=s(or);Df=n(BE,"4"),BE.forEach(e),HE.forEach(e),PE.forEach(e),Po.forEach(e),qs=d(t),Xa=r(t,"P",{});var CE=s(Xa);nr=r(CE,"STRONG",{});var NE=s(nr);Sf=n(NE,"FIRST() Fonksiyonu"),NE.forEach(e),CE.forEach(e),Us=d(t),ja=r(t,"P",{});var FE=s(ja);Af=n(FE,"Bir alandaki ilk değeri döndürür. Örneğin tablodaki ilk ismi öğrenmek istiyorsak."),FE.forEach(e),Ys=d(t),_a=r(t,"PRE",{class:!0});var Dv=s(_a);Dv.forEach(e),Gs=d(t),Wa=r(t,"P",{});var qE=s(Wa);Rf=n(qE,"Çıktı aşağıdaki gibi olacaktır:"),qE.forEach(e),Is=d(t),aa=r(t,"TABLE",{});var Ho=s(aa);ir=r(Ho,"THEAD",{});var UE=s(ir);dr=r(UE,"TR",{});var YE=s(dr);kr=r(YE,"TH",{});var GE=s(kr);Lf=n(GE,"ilkİsim"),GE.forEach(e),YE.forEach(e),UE.forEach(e),Of=d(Ho),fr=r(Ho,"TBODY",{});var IE=s(fr);pr=r(IE,"TR",{});var QE=s(pr);ur=r(QE,"TD",{});var VE=s(ur);wf=n(VE,"Ahmet"),VE.forEach(e),QE.forEach(e),IE.forEach(e),Ho.forEach(e),Qs=d(t),Za=r(t,"P",{});var KE=s(Za);Mf=n(KE,"Ancak bu MySQL First fonksiyonunu desteklemez. Aynı işi yapan sorgu MySQL’de aşağıdaki gibidir."),KE.forEach(e),Vs=d(t),Ta=r(t,"PRE",{class:!0});var Sv=s(Ta);Sv.forEach(e),Ks=d(t),ta=r(t,"P",{});var Bo=s(ta);zf=n(Bo,"Bu arada Limit konusu "),$a=r(Bo,"A",{href:!0});var xE=s($a);Pf=n(xE,"bu makalede"),xE.forEach(e),Hf=n(Bo," anlatıldı. Bilmiyorsanız bir göz atmanızda fayda var.  "),Bo.forEach(e),xs=d(t),ga=r(t,"P",{});var JE=s(ga);Er=r(JE,"STRONG",{});var XE=s(Er);Bf=n(XE,"LAST() Fonksiyonu"),XE.forEach(e),JE.forEach(e),Js=d(t),at=r(t,"P",{});var jE=s(at);Cf=n(jE,"Tahmin edebileceğiniz gibi en sondaki değeri döndürür. Ve yine tahmin edebileceğiniz gibi MySQL tarafından desteklenmez. Tablodaki son soyisim değerini döndüren sorgunun standart SQL ve MySQL versiyonları aşağıdaki gibidir:"),jE.forEach(e),Xs=d(t),ca=r(t,"PRE",{class:!0});var Av=s(ca);Av.forEach(e),js=d(t),ma=r(t,"PRE",{class:!0});var Rv=s(ma);Rv.forEach(e),Ws=d(t),tt=r(t,"P",{});var WE=s(tt);Nf=n(WE,"Her iki sorgunun çıktısı aşağıdaki gibidir."),WE.forEach(e),Zs=d(t),ea=r(t,"TABLE",{});var Co=s(ea);vr=r(Co,"THEAD",{});var ZE=s(vr);yr=r(ZE,"TR",{});var $E=s(yr);_r=r($E,"TH",{});var gE=s(_r);Ff=n(gE,"SonSoyad"),gE.forEach(e),$E.forEach(e),ZE.forEach(e),qf=d(Co),Tr=r(Co,"TBODY",{});var a2=s(Tr);cr=r(a2,"TR",{});var t2=s(cr);mr=r(t2,"TD",{});var e2=s(mr);Uf=n(e2,"Demir"),e2.forEach(e),t2.forEach(e),a2.forEach(e),Co.forEach(e),$s=d(t),et=r(t,"P",{});var l2=s(et);br=r(l2,"STRONG",{});var r2=s(br);Yf=n(r2,"MAX() ve MIN() Fonksiyonları"),r2.forEach(e),l2.forEach(e),gs=d(t),lt=r(t,"P",{});var s2=s(lt);Gf=n(s2,"Bir alandaki en büyük ve en küçük değerleri döndürürler. En yaşlı ve en genç çalışanları belirlemek istersek:"),s2.forEach(e),ao=d(t),ba=r(t,"PRE",{class:!0});var Lv=s(ba);Lv.forEach(e),to=d(t),rt=r(t,"P",{});var o2=s(rt);If=n(o2,"Çıktı aşağıdaki gibi olacaktır:"),o2.forEach(e),eo=d(t),la=r(t,"TABLE",{});var No=s(la);hr=r(No,"THEAD",{});var n2=s(hr);Dr=r(n2,"TR",{});var i2=s(Dr);Sr=r(i2,"TH",{});var d2=s(Sr);Qf=n(d2,"EnYaşlı"),d2.forEach(e),i2.forEach(e),n2.forEach(e),Vf=d(No),Ar=r(No,"TBODY",{});var k2=s(Ar);Rr=r(k2,"TR",{});var f2=s(Rr);Lr=r(f2,"TD",{});var p2=s(Lr);Kf=n(p2,"45"),p2.forEach(e),f2.forEach(e),k2.forEach(e),No.forEach(e),lo=d(t),st=r(t,"P",{});var u2=s(st);xf=n(u2," "),u2.forEach(e),ro=d(t),ha=r(t,"PRE",{class:!0});var Ov=s(ha);Ov.forEach(e),so=d(t),ot=r(t,"P",{});var E2=s(ot);Jf=n(E2,"Çıktı aşağıdaki gibi olacaktır:"),E2.forEach(e),oo=d(t),ra=r(t,"TABLE",{});var Fo=s(ra);Or=r(Fo,"THEAD",{});var v2=s(Or);wr=r(v2,"TR",{});var y2=s(wr);Mr=r(y2,"TH",{});var _2=s(Mr);Xf=n(_2,"EnGenç"),_2.forEach(e),y2.forEach(e),v2.forEach(e),jf=d(Fo),zr=r(Fo,"TBODY",{});var T2=s(zr);Pr=r(T2,"TR",{});var c2=s(Pr);Hr=r(c2,"TD",{});var m2=s(Hr);Wf=n(m2,"20"),m2.forEach(e),c2.forEach(e),T2.forEach(e),Fo.forEach(e),no=d(t),Da=r(t,"P",{});var Rp=s(Da);Br=r(Rp,"STRONG",{});var b2=s(Br);Zf=n(b2,"Dikkat:"),b2.forEach(e),$f=n(Rp," Eğer en yaşlı çalışanı ismi ile birlikte sorgulamak isteseydik aşağıdaki gibi bir sorgunun işimizi görebileğini düşünebilirsiniz. Ancak bu sorgu hatalıdır."),Rp.forEach(e),io=d(t),Sa=r(t,"PRE",{class:!0});var wv=s(Sa);wv.forEach(e),ko=d(t),nt=r(t,"P",{});var h2=s(nt);gf=n(h2,"Sorgu ad alanına tablodaki ilk ismi getirirken MAX(yas) alanına maksimum yaşı getirir:"),h2.forEach(e),fo=d(t),sa=r(t,"TABLE",{});var qo=s(sa);Cr=r(qo,"THEAD",{});var D2=s(Cr);Aa=r(D2,"TR",{});var Uo=s(Aa);Nr=r(Uo,"TH",{});var S2=s(Nr);ap=n(S2,"ad"),S2.forEach(e),tp=d(Uo),Fr=r(Uo,"TH",{});var A2=s(Fr);ep=n(A2,"EnYaşlı"),A2.forEach(e),Uo.forEach(e),D2.forEach(e),lp=d(qo),qr=r(qo,"TBODY",{});var R2=s(qr);Ra=r(R2,"TR",{});var Yo=s(Ra);Ur=r(Yo,"TD",{});var L2=s(Ur);rp=n(L2,"Ahmet"),L2.forEach(e),sp=d(Yo),Yr=r(Yo,"TD",{});var O2=s(Yr);op=n(O2,"45"),O2.forEach(e),Yo.forEach(e),R2.forEach(e),qo.forEach(e),po=d(t),it=r(t,"P",{});var w2=s(it);np=n(w2,"Ancak Ahmet isimli çalışanın yaşı 45 değildir. Fonksiyonun sadece maksimum değer ile ilgilendiğini unutmayalım. En yaşlı çalışanı ismi ile birlikte bulabilmek için iç-içe (iki seviyeli) sorgu yazmamız gerekiyor ki bu da ileriki bir makalenin konusu olacak inş.  "),w2.forEach(e),uo=d(t),dt=r(t,"P",{});var M2=s(dt);Gr=r(M2,"STRONG",{});var z2=s(Gr);ip=n(z2,"SUM() Fonksiyonu"),z2.forEach(e),M2.forEach(e),Eo=d(t),kt=r(t,"P",{});var P2=s(kt);dp=n(P2,"Sayısal değerler içeren bir kolondaki değerlerin toplamını döndürür. Örneğin aylık ödenen toplam maaşı öğrenmek istersek:"),P2.forEach(e),vo=d(t),La=r(t,"PRE",{class:!0});var Mv=s(La);Mv.forEach(e),yo=d(t),ft=r(t,"P",{});var H2=s(ft);kp=n(H2,"Çıktı aşağıdaki gibidir:"),H2.forEach(e),_o=d(t),oa=r(t,"TABLE",{});var Go=s(oa);Ir=r(Go,"THEAD",{});var B2=s(Ir);Qr=r(B2,"TR",{});var C2=s(Qr);Vr=r(C2,"TH",{});var N2=s(Vr);fp=n(N2,"ToplamMaaş"),N2.forEach(e),C2.forEach(e),B2.forEach(e),pp=d(Go),Kr=r(Go,"TBODY",{});var F2=s(Kr);xr=r(F2,"TR",{});var q2=s(xr);Jr=r(q2,"TD",{});var U2=s(Jr);up=n(U2,"31600"),U2.forEach(e),q2.forEach(e),F2.forEach(e),Go.forEach(e),To=d(t),na=r(t,"P",{});var Io=s(na);Ep=n(Io,"Son olarak kümeleme fonksiyonlarının "),Xr=r(Io,"CODE",{});var Y2=s(Xr);vp=n(Y2,"GROUP BY"),Y2.forEach(e),yp=n(Io," ifadesi ile birlikte sıkça kullanıldığını hatırlatalım. Bunun yanında iç-içe sorgularda da sıkça kümeleme fonksiyonu kullanılır. Sonraki makalelerde her iki konuyu da örneklerle inceleyeceğiz."),Io.forEach(e),co=d(t),pt=r(t,"P",{});var G2=s(pt);_p=n(G2,"Herkese kolay gelsin"),G2.forEach(e),mo=d(t),ut=r(t,"H3",{});var I2=s(ut);Tp=n(I2,"İlgili Diğer Makaleler"),I2.forEach(e),bo=d(t),U=r(t,"UL",{});var ia=s(U);jr=r(ia,"LI",{});var Q2=s(jr);Et=r(Q2,"A",{href:!0});var V2=s(Et);cp=n(V2,"SQL 12: Sorguda Birden Fazla Tablo Kullanma: Join-1"),V2.forEach(e),Q2.forEach(e),mp=d(ia),Wr=r(ia,"LI",{});var K2=s(Wr);vt=r(K2,"A",{href:!0});var x2=s(vt);bp=n(x2,"SQL 13: Sorguda Birden Fazla Tablo Kullanma: Join-2"),x2.forEach(e),K2.forEach(e),hp=d(ia),Zr=r(ia,"LI",{});var J2=s(Zr);yt=r(J2,"A",{href:!0});var X2=s(yt);Dp=n(X2,"SQL 15: GROUP BY İfadesi"),X2.forEach(e),J2.forEach(e),Sp=d(ia),$r=r(ia,"LI",{});var j2=s($r);_t=r(j2,"A",{href:!0});var W2=s(_t);Ap=n(W2,"SQL 16: HAVING İfadesi"),W2.forEach(e),j2.forEach(e),ia.forEach(e),this.h()},h(){u(Y,"align","left"),Z2(Y,"margin-right","30px"),Z2(Y,"margin-bottom","0px"),Bv(Y.src,Op="img/blog/Schema-SQL1.jpg")||u(Y,"src",Op),u(wa,"href","/sql-dersleri"),u(da,"class","language-sql"),u(ka,"class","language-sql"),u(fa,"class","language-sql"),u(pa,"class","language-sql"),u(ua,"class","language-sql"),u(Ea,"class","language-sql"),u(va,"class","language-sql"),u(xa,"href","/sql-distinct-ifadesi"),u(ya,"class","language-sql"),u(_a,"class","language-sql"),u(Ta,"class","language-sql"),u($a,"href","/sql-07-top-veya-limit-mysql"),u(ca,"class","language-sql"),u(ma,"class","language-sql"),u(ba,"class","language-sql"),u(ha,"class","language-sql"),u(Sa,"class","language-sql"),u(La,"class","language-sql"),u(Et,"href","/sql-12-sorguda-birden-fazla-tablo-kullanma-join-1"),u(vt,"href","/sql-13-sorguda-birden-fazla-tablo-kullanma-join-2"),u(yt,"href","/sql-15-group-by-ifadesi"),u(_t,"href","/sql-16-having-ifadesi")},m(t,k){f(t,Y,k),f(t,gr,k),f(t,Oa,k),a(Oa,Qo),f(t,as,k),f(t,Q,k),a(Q,Vo),a(Q,mt),a(mt,Ko),a(Q,xo),f(t,ts,k),f(t,V,k),a(V,bt),a(bt,Jo),a(V,Xo),a(V,wa),a(wa,jo),f(t,es,k),f(t,K,k),a(K,ht),a(ht,v),a(v,Dt),a(Dt,Wo),a(v,Zo),a(v,St),a(St,$o),a(v,go),a(v,At),a(At,an),a(v,tn),a(v,Rt),a(Rt,en),a(v,ln),a(v,Lt),a(Lt,rn),a(v,sn),a(v,Ot),a(Ot,on),a(v,nn),a(v,wt),a(wt,dn),a(v,kn),a(v,Mt),a(Mt,fn),a(K,pn),a(K,p),a(p,y),a(y,zt),a(zt,un),a(y,En),a(y,Pt),a(Pt,vn),a(y,yn),a(y,Ht),a(Ht,_n),a(y,Tn),a(y,Bt),a(Bt,cn),a(y,mn),a(y,Ct),a(Ct,bn),a(y,hn),a(y,Nt),a(Nt,Dn),a(y,Sn),a(y,Ft),a(Ft,An),a(y,Rn),a(y,qt),a(qt,Ln),a(p,On),a(p,_),a(_,Ut),a(Ut,wn),a(_,Mn),a(_,Yt),a(Yt,zn),a(_,Pn),a(_,Gt),a(Gt,Hn),a(_,Bn),a(_,It),a(It,Cn),a(_,Nn),a(_,Qt),a(Qt,Fn),a(_,qn),a(_,Vt),a(Vt,Un),a(_,Yn),a(_,Kt),a(Kt,Gn),a(_,In),a(_,xt),a(xt,Qn),a(p,Vn),a(p,T),a(T,Jt),a(Jt,Kn),a(T,xn),a(T,Xt),a(Xt,Jn),a(T,Xn),a(T,jt),a(jt,jn),a(T,Wn),a(T,Wt),a(Wt,Zn),a(T,$n),a(T,Zt),a(Zt,gn),a(T,ai),a(T,$t),a($t,ti),a(T,ei),a(T,gt),a(gt,li),a(T,ri),a(T,ae),a(ae,si),a(p,oi),a(p,c),a(c,te),a(te,ni),a(c,ii),a(c,ee),a(ee,di),a(c,ki),a(c,le),a(le,fi),a(c,pi),a(c,re),a(re,ui),a(c,Ei),a(c,se),a(se,vi),a(c,yi),a(c,oe),a(oe,_i),a(c,Ti),a(c,ne),a(ne,ci),a(c,mi),a(c,ie),a(ie,bi),a(p,hi),a(p,m),a(m,de),a(de,Di),a(m,Si),a(m,ke),a(ke,Ai),a(m,Ri),a(m,fe),a(fe,Li),a(m,Oi),a(m,pe),a(pe,wi),a(m,Mi),a(m,ue),a(ue,zi),a(m,Pi),a(m,Ee),a(Ee,Hi),a(m,Bi),a(m,ve),a(ve,Ci),a(m,Ni),a(m,ye),a(ye,Fi),a(p,qi),a(p,b),a(b,_e),a(_e,Ui),a(b,Yi),a(b,Te),a(Te,Gi),a(b,Ii),a(b,ce),a(ce,Qi),a(b,Vi),a(b,me),a(me,Ki),a(b,xi),a(b,be),a(be,Ji),a(b,Xi),a(b,he),a(he,ji),a(b,Wi),a(b,De),a(De,Zi),a(b,$i),a(b,Se),a(Se,gi),a(p,ad),a(p,h),a(h,Ae),a(Ae,td),a(h,ed),a(h,Re),a(Re,ld),a(h,rd),a(h,Le),a(Le,sd),a(h,od),a(h,Oe),a(Oe,nd),a(h,id),a(h,we),a(we,dd),a(h,kd),a(h,Me),a(Me,fd),a(h,pd),a(h,ze),a(ze,ud),a(h,Ed),a(h,Pe),a(Pe,vd),a(p,yd),a(p,D),a(D,He),a(He,_d),a(D,Td),a(D,Be),a(Be,cd),a(D,md),a(D,Ce),a(Ce,bd),a(D,hd),a(D,Ne),a(Ne,Dd),a(D,Sd),a(D,Fe),a(Fe,Ad),a(D,Rd),a(D,qe),a(qe,Ld),a(D,Od),a(D,Ue),a(Ue,wd),a(D,Md),a(D,Ye),a(Ye,zd),a(p,Pd),a(p,S),a(S,Ge),a(Ge,Hd),a(S,Bd),a(S,Ie),a(Ie,Cd),a(S,Nd),a(S,Qe),a(Qe,Fd),a(S,qd),a(S,Ve),a(Ve,Ud),a(S,Yd),a(S,Ke),a(Ke,Gd),a(S,Id),a(S,xe),a(xe,Qd),a(S,Vd),a(S,Je),a(Je,Kd),a(S,xd),a(S,Xe),a(Xe,Jd),a(p,Xd),a(p,A),a(A,je),a(je,jd),a(A,Wd),a(A,We),a(We,Zd),a(A,$d),a(A,Ze),a(Ze,gd),a(A,ak),a(A,$e),a($e,tk),a(A,ek),a(A,ge),a(ge,lk),a(A,rk),a(A,al),a(al,sk),a(A,ok),a(A,tl),a(tl,nk),a(A,ik),a(A,el),a(el,dk),a(p,kk),a(p,R),a(R,ll),a(ll,fk),a(R,pk),a(R,rl),a(rl,uk),a(R,Ek),a(R,sl),a(sl,vk),a(R,yk),a(R,ol),a(ol,_k),a(R,Tk),a(R,nl),a(nl,ck),a(R,mk),a(R,il),a(il,bk),a(R,hk),a(R,dl),a(dl,Dk),a(R,Sk),a(R,kl),a(kl,Ak),f(t,ls,k),f(t,Ma,k),a(Ma,fl),a(fl,Rk),f(t,rs,k),f(t,za,k),a(za,Lk),f(t,ss,k),f(t,da,k),da.innerHTML=g2,f(t,os,k),f(t,Pa,k),a(Pa,Ok),f(t,ns,k),f(t,x,k),a(x,pl),a(pl,ul),a(ul,El),a(El,wk),a(x,Mk),a(x,vl),a(vl,yl),a(yl,_l),a(_l,zk),f(t,is,k),f(t,Ha,k),a(Ha,Pk),f(t,ds,k),f(t,ka,k),ka.innerHTML=av,f(t,ks,k),f(t,Ba,k),a(Ba,Hk),f(t,fs,k),f(t,J,k),a(J,Tl),a(Tl,cl),a(cl,ml),a(ml,Bk),a(J,Ck),a(J,bl),a(bl,hl),a(hl,Dl),a(Dl,Nk),f(t,ps,k),f(t,Ca,k),a(Ca,Fk),f(t,us,k),f(t,fa,k),fa.innerHTML=tv,f(t,Es,k),f(t,Na,k),a(Na,qk),f(t,vs,k),f(t,X,k),a(X,Sl),a(Sl,Al),a(Al,Rl),a(Rl,Uk),a(X,Yk),a(X,Ll),a(Ll,Ol),a(Ol,wl),a(wl,Gk),f(t,ys,k),f(t,Fa,k),a(Fa,Ml),a(Ml,Ik),f(t,_s,k),f(t,qa,k),a(qa,Qk),f(t,Ts,k),f(t,pa,k),pa.innerHTML=ev,f(t,cs,k),f(t,Ua,k),a(Ua,Vk),f(t,ms,k),f(t,j,k),a(j,zl),a(zl,Pl),a(Pl,Hl),a(Hl,Kk),a(j,xk),a(j,Bl),a(Bl,Cl),a(Cl,Nl),a(Nl,Jk),f(t,bs,k),f(t,Ya,k),a(Ya,Xk),f(t,hs,k),f(t,ua,k),ua.innerHTML=lv,f(t,Ds,k),f(t,G,k),a(G,jk),a(G,Fl),a(Fl,Wk),a(G,Zk),a(G,ql),a(ql,$k),a(G,gk),f(t,Ss,k),f(t,Ga,k),a(Ga,Ul),a(Ul,af),f(t,As,k),f(t,W,k),a(W,tf),a(W,Yl),a(Yl,ef),a(W,lf),f(t,Rs,k),f(t,Ea,k),Ea.innerHTML=rv,f(t,Ls,k),f(t,Ia,k),a(Ia,rf),f(t,Os,k),f(t,Z,k),a(Z,Gl),a(Gl,Il),a(Il,Ql),a(Ql,sf),a(Z,of),a(Z,Vl),a(Vl,Kl),a(Kl,xl),a(xl,nf),f(t,ws,k),f(t,Qa,k),a(Qa,df),f(t,Ms,k),f(t,va,k),va.innerHTML=sv,f(t,zs,k),f(t,Va,k),a(Va,kf),f(t,Ps,k),f(t,$,k),a($,Jl),a(Jl,Xl),a(Xl,jl),a(jl,ff),a($,pf),a($,Wl),a(Wl,Zl),a(Zl,$l),a($l,uf),f(t,Hs,k),f(t,Ka,k),a(Ka,gl),a(gl,Ef),f(t,Bs,k),f(t,I,k),a(I,vf),a(I,xa),a(xa,yf),a(I,_f),a(I,ar),a(ar,Tf),a(I,cf),f(t,Cs,k),f(t,ya,k),ya.innerHTML=ov,f(t,Ns,k),f(t,Ja,k),a(Ja,mf),f(t,Fs,k),f(t,g,k),a(g,tr),a(tr,er),a(er,lr),a(lr,bf),a(g,hf),a(g,rr),a(rr,sr),a(sr,or),a(or,Df),f(t,qs,k),f(t,Xa,k),a(Xa,nr),a(nr,Sf),f(t,Us,k),f(t,ja,k),a(ja,Af),f(t,Ys,k),f(t,_a,k),_a.innerHTML=nv,f(t,Gs,k),f(t,Wa,k),a(Wa,Rf),f(t,Is,k),f(t,aa,k),a(aa,ir),a(ir,dr),a(dr,kr),a(kr,Lf),a(aa,Of),a(aa,fr),a(fr,pr),a(pr,ur),a(ur,wf),f(t,Qs,k),f(t,Za,k),a(Za,Mf),f(t,Vs,k),f(t,Ta,k),Ta.innerHTML=iv,f(t,Ks,k),f(t,ta,k),a(ta,zf),a(ta,$a),a($a,Pf),a(ta,Hf),f(t,xs,k),f(t,ga,k),a(ga,Er),a(Er,Bf),f(t,Js,k),f(t,at,k),a(at,Cf),f(t,Xs,k),f(t,ca,k),ca.innerHTML=dv,f(t,js,k),f(t,ma,k),ma.innerHTML=kv,f(t,Ws,k),f(t,tt,k),a(tt,Nf),f(t,Zs,k),f(t,ea,k),a(ea,vr),a(vr,yr),a(yr,_r),a(_r,Ff),a(ea,qf),a(ea,Tr),a(Tr,cr),a(cr,mr),a(mr,Uf),f(t,$s,k),f(t,et,k),a(et,br),a(br,Yf),f(t,gs,k),f(t,lt,k),a(lt,Gf),f(t,ao,k),f(t,ba,k),ba.innerHTML=fv,f(t,to,k),f(t,rt,k),a(rt,If),f(t,eo,k),f(t,la,k),a(la,hr),a(hr,Dr),a(Dr,Sr),a(Sr,Qf),a(la,Vf),a(la,Ar),a(Ar,Rr),a(Rr,Lr),a(Lr,Kf),f(t,lo,k),f(t,st,k),a(st,xf),f(t,ro,k),f(t,ha,k),ha.innerHTML=pv,f(t,so,k),f(t,ot,k),a(ot,Jf),f(t,oo,k),f(t,ra,k),a(ra,Or),a(Or,wr),a(wr,Mr),a(Mr,Xf),a(ra,jf),a(ra,zr),a(zr,Pr),a(Pr,Hr),a(Hr,Wf),f(t,no,k),f(t,Da,k),a(Da,Br),a(Br,Zf),a(Da,$f),f(t,io,k),f(t,Sa,k),Sa.innerHTML=uv,f(t,ko,k),f(t,nt,k),a(nt,gf),f(t,fo,k),f(t,sa,k),a(sa,Cr),a(Cr,Aa),a(Aa,Nr),a(Nr,ap),a(Aa,tp),a(Aa,Fr),a(Fr,ep),a(sa,lp),a(sa,qr),a(qr,Ra),a(Ra,Ur),a(Ur,rp),a(Ra,sp),a(Ra,Yr),a(Yr,op),f(t,po,k),f(t,it,k),a(it,np),f(t,uo,k),f(t,dt,k),a(dt,Gr),a(Gr,ip),f(t,Eo,k),f(t,kt,k),a(kt,dp),f(t,vo,k),f(t,La,k),La.innerHTML=Ev,f(t,yo,k),f(t,ft,k),a(ft,kp),f(t,_o,k),f(t,oa,k),a(oa,Ir),a(Ir,Qr),a(Qr,Vr),a(Vr,fp),a(oa,pp),a(oa,Kr),a(Kr,xr),a(xr,Jr),a(Jr,up),f(t,To,k),f(t,na,k),a(na,Ep),a(na,Xr),a(Xr,vp),a(na,yp),f(t,co,k),f(t,pt,k),a(pt,_p),f(t,mo,k),f(t,ut,k),a(ut,Tp),f(t,bo,k),f(t,U,k),a(U,jr),a(jr,Et),a(Et,cp),a(U,mp),a(U,Wr),a(Wr,vt),a(vt,bp),a(U,hp),a(U,Zr),a(Zr,yt),a(yt,Dp),a(U,Sp),a(U,$r),a($r,_t),a(_t,Ap)},p:Lp,i:Lp,o:Lp,d(t){t&&e(Y),t&&e(gr),t&&e(Oa),t&&e(as),t&&e(Q),t&&e(ts),t&&e(V),t&&e(es),t&&e(K),t&&e(ls),t&&e(Ma),t&&e(rs),t&&e(za),t&&e(ss),t&&e(da),t&&e(os),t&&e(Pa),t&&e(ns),t&&e(x),t&&e(is),t&&e(Ha),t&&e(ds),t&&e(ka),t&&e(ks),t&&e(Ba),t&&e(fs),t&&e(J),t&&e(ps),t&&e(Ca),t&&e(us),t&&e(fa),t&&e(Es),t&&e(Na),t&&e(vs),t&&e(X),t&&e(ys),t&&e(Fa),t&&e(_s),t&&e(qa),t&&e(Ts),t&&e(pa),t&&e(cs),t&&e(Ua),t&&e(ms),t&&e(j),t&&e(bs),t&&e(Ya),t&&e(hs),t&&e(ua),t&&e(Ds),t&&e(G),t&&e(Ss),t&&e(Ga),t&&e(As),t&&e(W),t&&e(Rs),t&&e(Ea),t&&e(Ls),t&&e(Ia),t&&e(Os),t&&e(Z),t&&e(ws),t&&e(Qa),t&&e(Ms),t&&e(va),t&&e(zs),t&&e(Va),t&&e(Ps),t&&e($),t&&e(Hs),t&&e(Ka),t&&e(Bs),t&&e(I),t&&e(Cs),t&&e(ya),t&&e(Ns),t&&e(Ja),t&&e(Fs),t&&e(g),t&&e(qs),t&&e(Xa),t&&e(Us),t&&e(ja),t&&e(Ys),t&&e(_a),t&&e(Gs),t&&e(Wa),t&&e(Is),t&&e(aa),t&&e(Qs),t&&e(Za),t&&e(Vs),t&&e(Ta),t&&e(Ks),t&&e(ta),t&&e(xs),t&&e(ga),t&&e(Js),t&&e(at),t&&e(Xs),t&&e(ca),t&&e(js),t&&e(ma),t&&e(Ws),t&&e(tt),t&&e(Zs),t&&e(ea),t&&e($s),t&&e(et),t&&e(gs),t&&e(lt),t&&e(ao),t&&e(ba),t&&e(to),t&&e(rt),t&&e(eo),t&&e(la),t&&e(lo),t&&e(st),t&&e(ro),t&&e(ha),t&&e(so),t&&e(ot),t&&e(oo),t&&e(ra),t&&e(no),t&&e(Da),t&&e(io),t&&e(Sa),t&&e(ko),t&&e(nt),t&&e(fo),t&&e(sa),t&&e(po),t&&e(it),t&&e(uo),t&&e(dt),t&&e(Eo),t&&e(kt),t&&e(vo),t&&e(La),t&&e(yo),t&&e(ft),t&&e(_o),t&&e(oa),t&&e(To),t&&e(na),t&&e(co),t&&e(pt),t&&e(mo),t&&e(ut),t&&e(bo),t&&e(U)}}}const Fv={title:"SQL 14: Kümeleme Fonksiyonları",date:"1888-01-01",subtitle:"Programlama dillerinde olduğu gibi SQL'de de bir çok yerleşik (built-in) fonksiyon mevcuttur. Bunlar temel olarak kümeleme (aggregate) fonksiyonları ve skalar (scalar - iyi bir önerisi olan?) fonksiyonlar diye ikiye ayrılır."};class qv extends zv{constructor(Y){super(),Pv(this,Y,null,Cv,Hv,{})}}export{qv as default,Fv as metadata};
