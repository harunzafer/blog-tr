import{S as Ka,i as Ga,s as Fa,k as p,a as r,q as i,l,c as k,m as o,r as u,h as n,n as f,p as Ja,O as Za,b as t,C as e,B as za}from"./index-9681ceb5.js";function Wa(Ta){let c,_a,B,d,aa,x,na,sa,J,z,ea,T,_,ta,R,E,pa,V,g,Ra=`<code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">KayitEkle</span><span class="token punctuation">(</span><span class="token class-name">String</span> ad<span class="token punctuation">,</span> <span class="token class-name">String</span> soyad<span class="token punctuation">,</span> <span class="token class-name">String</span> yas<span class="token punctuation">,</span> <span class="token class-name">String</span> cinsiyet<span class="token punctuation">)</span>  <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">&#123;</span>

    <span class="token class-name">Statement</span> st <span class="token operator">=</span> <span class="token function">baglantiAc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"INSERT INTO vt.kisiler (Ad, Soyad, Yas, Cinsiyet) VALUES ("</span>
    <span class="token operator">+</span> <span class="token string">"'"</span> <span class="token operator">+</span> ad <span class="token operator">+</span> <span class="token string">"', "</span>
    <span class="token operator">+</span> <span class="token string">"'"</span> <span class="token operator">+</span> soyad <span class="token operator">+</span> <span class="token string">"', "</span>
    <span class="token operator">+</span> <span class="token string">""</span> <span class="token operator">+</span> yas <span class="token operator">+</span> <span class="token string">", "</span>
    <span class="token operator">+</span> <span class="token string">""</span> <span class="token operator">+</span> cinsiyet <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">;</span>

    st<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//sorguyu çalıştır</span>
    <span class="token function">baglantiKapat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//bağlantıyı kapat</span>
<span class="token punctuation">&#125;</span></code>`,O,L,la,Y,w,oa,D,v,Va=`<code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preparedKayitEkle</span><span class="token punctuation">(</span><span class="token class-name">String</span> ad<span class="token punctuation">,</span> <span class="token class-name">String</span> soyad<span class="token punctuation">,</span> <span class="token class-name">String</span> yas<span class="token punctuation">,</span> <span class="token class-name">String</span> cinsiyet<span class="token punctuation">)</span>  <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>

    <span class="token class-name">String</span> sql<span class="token operator">=</span><span class="token string">"insert into Kisiler (Ad, soyad, yas, cinsiyet) values (?,?,?,?)"</span><span class="token punctuation">;</span>

    <span class="token class-name">PreparedStatement</span> prepared <span class="token operator">=</span> <span class="token function">baglantiAc</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
    prepared<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> ad<span class="token punctuation">)</span><span class="token punctuation">;</span>
    prepared<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> soyad<span class="token punctuation">)</span><span class="token punctuation">;</span>
    prepared<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>yas<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cinsiyet<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        prepared<span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        prepared<span class="token punctuation">.</span><span class="token function">setBoolean</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    prepared<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//sorguyu çalıştır</span>
<span class="token punctuation">&#125;</span></code>`,H,b,ia,M,ua,ra,K,y,ka,N,ca,ma,G,S,Oa=`<code class="language-java"><span class="token keyword">public</span> <span class="token class-name">PreparedStatement</span> <span class="token function">baglantiAc</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url <span class="token operator">+</span> dbName<span class="token punctuation">,</span> userName<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//bağlantı açılıyor</span>

    <span class="token keyword">return</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//sorguya uygun hazır ifadeyi döndür</span>
<span class="token punctuation">&#125;</span></code>`,F,P,da,Z,Q,ba,W,m,U,j,ya,fa,C,q,ga,va,I,A,Sa;return{c(){c=p("img"),B=r(),d=p("p"),aa=i("İlk iki yazıyı okuduğunuzu kabul ederek başlıyorum. İlk yazıda veritabanı bağlantısını en başta açmış, en sonda da kapamıştık. Program çalıştığı müddetçe veritabanı bağlantısı açık kalmıştı. Bunun yanında yine programın en başında yalnızca bir defa ResultSet nesnemizi "),x=p("code"),na=i("SELECT * FROM kisiler"),sa=i(" SQL sorgusunu kullanarak, kisiler tablosundaki tüm kayıtlar ile doldurmuş ve programın kalanındaki ekle/sil/güncelle gibi işlemleri SQL sorgusu yazmadan gerçekleştirmiştik."),J=r(),z=p("p"),ea=i("İkinci örnekte ise seç/ekle/sil/güncelle gibi her veritabanı işlemi için gereken sorguyu kendimiz yazmış, her sorguyu çalıştırmadan önce veritabanı bağlantısını açıp sorgu çalıştıktan hemen sonra bağlantıyı kapatmıştık."),T=r(),_=p("p"),ta=i("Binlerce kullanıcının aynı anda kullandığı bir uygulama için, örneğin bir web uygulaması için ilk yaklaşımın pek de makul olmadığını belirtmiştim. Zira bu aynı anda binlerce veritabanı bağlantısının açık olması demek."),R=r(),E=p("p"),pa=i("İkinci örneğin en büyük dez avantajı SQL sorgularını String olarak yazmadaki zorluk. Aşağıdaki koda bir bakın:"),V=r(),g=p("pre"),O=r(),L=p("p"),la=i("Yukarıdaki SQL sorgusunu yazmak gerçekten zahmetli bir iş. Ben şu ana kadar bir defada hatasız yazamadım. Tek tırnak, virgül, boşluk gibi karakterlerden birini unutmak sorgunun hatalı olmasına yetiyor."),Y=r(),w=p("p"),oa=i("Şimdi bir de aşağıdaki koda bakın:"),D=r(),v=p("pre"),H=r(),b=p("p"),ia=i("Gördüğünüz gibi SQL sorgusunu String olarak yazmak çok daha kolay. Değer alanlarını birer "),M=p("code"),ua=i("?"),ra=i(" karakteri ile belirtip aşağıda sırası ile hangi soru işareti yerine hangi değerin geleceğini belirtiyoruz."),K=r(),y=p("p"),ka=i("Yukarıdaki kodda Java’nın PreparedStatement (hazır ifade) sınıfını kullandık. PreparedStatement sınıfını kullanabilmemiz için "),N=p("code"),ca=i("baglantıAc()"),ma=i(" metodumuzda ufak bir değişiklik yapmamız gerekiyor:"),G=r(),S=p("pre"),F=r(),P=p("p"),da=i("Herkese Kolay Gelsin"),Z=r(),Q=p("h3"),ba=i("İlgili Yazılar"),W=r(),m=p("ul"),U=p("li"),j=p("a"),ya=i("Netbeans, Java, MySQL: Örnek Veritabanı Uygulaması – 1"),fa=r(),C=p("li"),q=p("a"),ga=i("Netbeans, Java, MySQL: Örnek Veritabanı Uygulaması – 2"),va=r(),I=p("li"),A=p("a"),Sa=i("Java ve SQLite: Örnek Veritabanı Uygulaması – 4"),this.h()},l(a){c=l(a,"IMG",{align:!0,style:!0,src:!0}),B=k(a),d=l(a,"P",{});var s=o(d);aa=u(s,"İlk iki yazıyı okuduğunuzu kabul ederek başlıyorum. İlk yazıda veritabanı bağlantısını en başta açmış, en sonda da kapamıştık. Program çalıştığı müddetçe veritabanı bağlantısı açık kalmıştı. Bunun yanında yine programın en başında yalnızca bir defa ResultSet nesnemizi "),x=l(s,"CODE",{});var Ea=o(x);na=u(Ea,"SELECT * FROM kisiler"),Ea.forEach(n),sa=u(s," SQL sorgusunu kullanarak, kisiler tablosundaki tüm kayıtlar ile doldurmuş ve programın kalanındaki ekle/sil/güncelle gibi işlemleri SQL sorgusu yazmadan gerçekleştirmiştik."),s.forEach(n),J=k(a),z=l(a,"P",{});var La=o(z);ea=u(La,"İkinci örnekte ise seç/ekle/sil/güncelle gibi her veritabanı işlemi için gereken sorguyu kendimiz yazmış, her sorguyu çalıştırmadan önce veritabanı bağlantısını açıp sorgu çalıştıktan hemen sonra bağlantıyı kapatmıştık."),La.forEach(n),T=k(a),_=l(a,"P",{});var wa=o(_);ta=u(wa,"Binlerce kullanıcının aynı anda kullandığı bir uygulama için, örneğin bir web uygulaması için ilk yaklaşımın pek de makul olmadığını belirtmiştim. Zira bu aynı anda binlerce veritabanı bağlantısının açık olması demek."),wa.forEach(n),R=k(a),E=l(a,"P",{});var Pa=o(E);pa=u(Pa,"İkinci örneğin en büyük dez avantajı SQL sorgularını String olarak yazmadaki zorluk. Aşağıdaki koda bir bakın:"),Pa.forEach(n),V=k(a),g=l(a,"PRE",{class:!0});var Ya=o(g);Ya.forEach(n),O=k(a),L=l(a,"P",{});var Qa=o(L);la=u(Qa,"Yukarıdaki SQL sorgusunu yazmak gerçekten zahmetli bir iş. Ben şu ana kadar bir defada hatasız yazamadım. Tek tırnak, virgül, boşluk gibi karakterlerden birini unutmak sorgunun hatalı olmasına yetiyor."),Qa.forEach(n),Y=k(a),w=l(a,"P",{});var ja=o(w);oa=u(ja,"Şimdi bir de aşağıdaki koda bakın:"),ja.forEach(n),D=k(a),v=l(a,"PRE",{class:!0});var Da=o(v);Da.forEach(n),H=k(a),b=l(a,"P",{});var X=o(b);ia=u(X,"Gördüğünüz gibi SQL sorgusunu String olarak yazmak çok daha kolay. Değer alanlarını birer "),M=l(X,"CODE",{});var qa=o(M);ua=u(qa,"?"),qa.forEach(n),ra=u(X," karakteri ile belirtip aşağıda sırası ile hangi soru işareti yerine hangi değerin geleceğini belirtiyoruz."),X.forEach(n),K=k(a),y=l(a,"P",{});var $=o(y);ka=u($,"Yukarıdaki kodda Java’nın PreparedStatement (hazır ifade) sınıfını kullandık. PreparedStatement sınıfını kullanabilmemiz için "),N=l($,"CODE",{});var Aa=o(N);ca=u(Aa,"baglantıAc()"),Aa.forEach(n),ma=u($," metodumuzda ufak bir değişiklik yapmamız gerekiyor:"),$.forEach(n),G=k(a),S=l(a,"PRE",{class:!0});var Ha=o(S);Ha.forEach(n),F=k(a),P=l(a,"P",{});var ha=o(P);da=u(ha,"Herkese Kolay Gelsin"),ha.forEach(n),Z=k(a),Q=l(a,"H3",{});var xa=o(Q);ba=u(xa,"İlgili Yazılar"),xa.forEach(n),W=k(a),m=l(a,"UL",{});var h=o(m);U=l(h,"LI",{});var Ma=o(U);j=l(Ma,"A",{href:!0});var Na=o(j);ya=u(Na,"Netbeans, Java, MySQL: Örnek Veritabanı Uygulaması – 1"),Na.forEach(n),Ma.forEach(n),fa=k(h),C=l(h,"LI",{});var Ua=o(C);q=l(Ua,"A",{href:!0});var Ca=o(q);ga=u(Ca,"Netbeans, Java, MySQL: Örnek Veritabanı Uygulaması – 2"),Ca.forEach(n),Ua.forEach(n),va=k(h),I=l(h,"LI",{});var Ia=o(I);A=l(Ia,"A",{href:!0});var Ba=o(A);Sa=u(Ba,"Java ve SQLite: Örnek Veritabanı Uygulaması – 4"),Ba.forEach(n),Ia.forEach(n),h.forEach(n),this.h()},h(){f(c,"align","left"),Ja(c,"margin-right","30px"),Ja(c,"margin-bottom","0px"),Za(c.src,_a="img/blog/netbeans-java-mySQL.jpg")||f(c,"src",_a),f(g,"class","language-java"),f(v,"class","language-java"),f(S,"class","language-java"),f(j,"href","/netbeans-java-mysql-ornek-veritabani-uygulamasi-1"),f(q,"href","/netbeans-java-mysql-ornek-veritabani-uygulamasi-2"),f(A,"href","/java-ve-sqlite-ornek-veritabani-uygulamasi")},m(a,s){t(a,c,s),t(a,B,s),t(a,d,s),e(d,aa),e(d,x),e(x,na),e(d,sa),t(a,J,s),t(a,z,s),e(z,ea),t(a,T,s),t(a,_,s),e(_,ta),t(a,R,s),t(a,E,s),e(E,pa),t(a,V,s),t(a,g,s),g.innerHTML=Ra,t(a,O,s),t(a,L,s),e(L,la),t(a,Y,s),t(a,w,s),e(w,oa),t(a,D,s),t(a,v,s),v.innerHTML=Va,t(a,H,s),t(a,b,s),e(b,ia),e(b,M),e(M,ua),e(b,ra),t(a,K,s),t(a,y,s),e(y,ka),e(y,N),e(N,ca),e(y,ma),t(a,G,s),t(a,S,s),S.innerHTML=Oa,t(a,F,s),t(a,P,s),e(P,da),t(a,Z,s),t(a,Q,s),e(Q,ba),t(a,W,s),t(a,m,s),e(m,U),e(U,j),e(j,ya),e(m,fa),e(m,C),e(C,q),e(q,ga),e(m,va),e(m,I),e(I,A),e(A,Sa)},p:za,i:za,o:za,d(a){a&&n(c),a&&n(B),a&&n(d),a&&n(J),a&&n(z),a&&n(T),a&&n(_),a&&n(R),a&&n(E),a&&n(V),a&&n(g),a&&n(O),a&&n(L),a&&n(Y),a&&n(w),a&&n(D),a&&n(v),a&&n(H),a&&n(b),a&&n(K),a&&n(y),a&&n(G),a&&n(S),a&&n(F),a&&n(P),a&&n(Z),a&&n(Q),a&&n(W),a&&n(m)}}}const $a={title:"Netbeans, Java, MySQL: Örnek Veritabanı Uygulaması – 3",date:"2010-01-30",subtitle:"İlk iki yazıyı okuduğunuzu kabul ederek başlıyorum. İlk yazıda veritabanı bağlantısını en başta açmış, en sonda da kapamıştık."};class an extends Ka{constructor(c){super(),Ga(this,c,null,Wa,Fa,{})}}export{an as default,$a as metadata};
